<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="@_aTI@K9,*1DvnOwV_.N">sb1Strt</variable><variable id="ULR.M^6P$#.]8xQ.([vK">sb2Stop</variable></variables><block type="pxt-on-start" id="W`f!EI4L)UtB#SlVC!OF" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id="8MD*D!(XjqEyF5XpSc%P" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let ioInfo = {" line1="    ls1: DigitalPin.P13, ls2: DigitalPin.P14, ls3: DigitalPin.P15, ls4: DigitalPin.P16," line2="    lvs1: DigitalPin.P8, lvs2: DigitalPin.P9, lvs3: DigitalPin.P16," line3="    t1: AnalogPin.P0, t2: AnalogPin.P1," line4="    rt1: AnalogPin.P2," line5="    sb1: DigitalPin.P5, sb2: DigitalPin.P11" line6="};" numlines="7" declaredvars="ioInfo"></mutation><next><block type="typescript_statement" id=")~-Z=2heX7^zk_#*D,9]" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum states { init, idle, load1, load2, load3, rt1, rt2, unload }" numlines="1"></mutation></block></next></block></statement></block><block type="device_forever" id=";u`{:P,V)hy^4(L(24re" x="862" y="20"><statement name="HANDLER"><block type="variables_set" id="oM~/2aan|1MEt:BR(ES_"><field name="VAR" id="@_aTI@K9,*1DvnOwV_.N">sb1Strt</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_operation" id="1s-VMGGoENnMF*a.st`f"><field name="OP">OR</field><value name="A"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="H82Cdf#VqEm{:{/md;aZ"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="XIA?gZ@|OAN|Re_U.+lh" editable="false"><field name="EXPRESSION">pins.digitalReadPin(ioInfo.sb1)</field></block></value><value name="B"><shadow type="math_number" id="3CUjbGr.MJnoLF+W3stD"><field name="NUM">1</field></shadow></value></block></value><value name="B"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="device_get_button2" id=",+Yf$xI7N0+3i+Q@_jww"><field name="NAME">Button.A</field></block></value></block></value><next><block type="variables_set" id="Y_B_aXUeh|NG(!r@:U2x"><field name="VAR" id="ULR.M^6P$#.]8xQ.([vK">sb2Stop</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_operation" id="5KZ|Oic)z{W@Au,ZjQS~"><field name="OP">OR</field><value name="A"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="jN!9%q,%Sb[4ubo=dyG*"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="wh?Uo#XmqJS;WpUo@6Q[" editable="false"><field name="EXPRESSION">pins.digitalReadPin(ioInfo.sb2)</field></block></value><value name="B"><shadow type="math_number" id="U1!}}W6.|JM7MH(6XY^W"><field name="NUM">1</field></shadow></value></block></value><value name="B"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="device_get_button2" id="?jn6A+jNY?wugQ-x,H7}"><field name="NAME">Button.B</field></block></value></block></value><next><block type="typescript_statement" id="*JM;lF$}(x[/j!Q9qwMY" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let ls1Emp = pins.digitalReadPin(ioInfo.ls1);" numlines="1" declaredvars="ls1Emp"></mutation><next><block type="typescript_statement" id="p5@)o4w[qI.qwOf[PgNa" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let ls2Lo = pins.digitalReadPin(ioInfo.ls2);" numlines="1" declaredvars="ls2Lo"></mutation><next><block type="typescript_statement" id="$U}l^xa2kk*Vnzz2]k9y" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let ls3Mdl = pins.digitalReadPin(ioInfo.ls3);" numlines="1" declaredvars="ls3Mdl"></mutation><next><block type="typescript_statement" id="ox_g^M5)zQR@.9^eF3:n" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let ls4Hi = pins.digitalReadPin(ioInfo.ls4);" numlines="1" declaredvars="ls4Hi"></mutation><next><block type="typescript_statement" id="DIjZ-4ZN_I89Z,~$b~B%" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let rt1 = pins.analogReadPin(ioInfo.rt1);" numlines="1" declaredvars="rt1"></mutation><next><block type="typescript_statement" id="Y(zTQ12q|,9Ot2IP/gQX" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let t1 = pins.analogReadPin(ioInfo.t1);" numlines="1" declaredvars="t1"></mutation><next><block type="typescript_statement" id="xPG*y2AzfsDaB-xBpCB#" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let t2 = pins.analogReadPin(ioInfo.t2);" numlines="1" declaredvars="t2"></mutation><next><block type="typescript_statement" id="K5JlhuYk#v$1P;abN;6i" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (state) {" line1="        case states.idle:" line2="            pins.digitalWritePin(ioInfo.lvs1, 0);" line3="            pins.digitalWritePin(ioInfo.lvs2, 0);" line4="            pins.digitalWritePin(ioInfo.lvs3, 0);" line5="            pins.digitalWritePin(ioInfo.ls1, 0);" line6="            pins.digitalWritePin(ioInfo.ls2, 0);" line7="            pins.digitalWritePin(ioInfo.ls3, 0);" line8="            pins.digitalWritePin(ioInfo.ls4, 0);" line9="            pins.analogWritePin(ioInfo.rt1, 0);" line10="            pins.analogWritePin(ioInfo.t1, 0);" line11="            pins.analogWritePin(ioInfo.t2, 0);" line12="            if (sb1Strt) {" line13="                pins.digitalWritePin(ioInfo.sb1, 1)" line14="                if (ls1Emp === 1) {" line15="                    state = states.unload;" line16="                    serial.writeLine('Unloading')" line17="                } else {" line18="                    state = states.load1;" line19="                    serial.writeLine('Loading 1')" line20="                }" line21="            }" line22="            break" line23="        case states.load1:" line24="            pins.digitalWritePin(ioInfo.lvs1, (1023 * 0.50));" line25="            if (ls1Emp === 1) {" line26="                if (ls2Lo === 1) {" line27="                    state = states.load2;" line28="                    serial.writeLine('Loading 2')" line29="                }" line30="            }" line31="            break" line32="        case states.load2:" line33="            pins.digitalWritePin(ioInfo.lvs1, 0);" line34="            pins.digitalWritePin(ioInfo.lvs2, 1);" line35="            if (ls3Mdl === 1) {" line36="                pins.digitalWritePin(ioInfo.lvs2, 0);" line37="                state = states.rt1;" line38="                pins.analogWritePin(ioInfo.rt1, 1023);" line39="                serial.writeLine('Start Rotating 1');" line40="                serial.writeLine('Time 210s');" line41="" line42="            }" line43="            break" line44="        case states.rt1:" line45="            if (t1 === 1023) {" line46="                pins.analogWritePin(ioInfo.rt1, 0);" line47="                state = states.load3;" line48="                serial.writeLine('Loading 3')" line49="            }" line50="            break" line51="        case states.load3:" line52="            pins.digitalWritePin(ioInfo.lvs1, 1023);" line53="            if (ls4Hi === 1) {" line54="                pins.digitalWritePin(ioInfo.lvs1, 0);" line55="                state = states.rt2;" line56="                pins.analogWritePin(ioInfo.rt1, 1023);" line57="                serial.writeLine('Start Rotating 2');" line58="                serial.writeLine('Time 900s');" line59="" line60="            }" line61="            break" line62="        case states.rt2:" line63="            if (t2 === 1023) {" line64="                pins.analogWritePin(ioInfo.rt1, 0);" line65="                state = states.unload;" line66="                serial.writeLine('Unloading')" line67="            }" line68="            break" line69="        default:" line70="            state = states.idle;" line71="    }" numlines="72"></mutation><next><block type="device_pause" id="p{prz($;yzbBOL1FjlsV"><value name="pause"><shadow type="timePicker" id="=P/.;`OJe+VB-Q~{c[+?"><field name="ms">200</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></xml>